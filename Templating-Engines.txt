Templating Engines
  - A template engine enables you to use static template files in your application. At runtime, 
    the template engine replaces variables in a template file with actual values, and transforms 
    the template into an HTML file sent to the client. This approach makes it easier to design 
    an HTML page.
  - Some popular template engines that work with Express are Pug, Mustache, and EJS. The Express 
    application generator uses Jade as its default, but it also supports several others.
_________________________________________________________________________________________________
EJS - Embedded JavaScript templating
  - EJS is a simple templating language that lets you generate HTML markup with plain JavaScript. 
    No religiousness about how to organize things. No reinvention of iteration and control-flow. 
    It's just plain JavaScript.
  - Install
    $ npm install ejs
  - use (with Express):
    app.set('view engine', 'ejs');
    app.set('views', 'views');
  - tags:
    <% 'Scriptlet' tag, for control-flow, no output
    <%_ ‘Whitespace Slurping’ Scriptlet tag, strips all whitespace before it
    <%= Outputs the value into the template (HTML escaped)
    <%- Outputs the unescaped value into the template
    <%# Comment tag, no execution, no output
    <%% Outputs a literal '<%'
    %> Plain ending tag
    -%> Trim-mode ('newline slurp') tag, trims following newline
    _%> ‘Whitespace Slurping’ ending tag, removes all whitespace after it
  - Includes
    Includes are relative to the template with the include call. (This requires the 'filename' option.) 
    For example if you have "./views/users.ejs" and "./views/user/show.ejs" you would use: 
    <%- include('user/show'); %>.
    You'll likely want to use the raw output tag (<%-) with your include to avoid double-escaping the 
    HTML output.
  - for more information: https://github.com/mde/ejs
