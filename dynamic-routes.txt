Route parameters
  Route parameters are named URL segments that are used to capture the values 
  specified at their position in the URL. The captured values are populated in 
  the req.params object, with the name of the route parameter specified in the 
  path as their respective keys.
    Route path: /users/:userId/books/:bookId
    Request URL: http://localhost:3000/users/34/books/8989
    req.params: { "userId": "34", "bookId": "8989" }

req.params
  This property is an object containing properties mapped to the named route 
  “parameters”. For example, if you have the route /user/:name, then the “name” 
  property is available as req.params.name. This object defaults to {}.
    // GET /user/tj
    console.dir(req.params.name)
    // => 'tj'
  When you use a regular expression for the route definition, capture groups are 
  provided in the array using req.params[n], where n is the nth capture group. This 
  rule is applied to unnamed wild card matches with string routes such as /file/*:
    // GET /file/javascripts/jquery.js
    console.dir(req.params[0])
    // => 'javascripts/jquery.js'
  If you need to make changes to a key in req.params, use the app.param handler. Changes 
  are applicable only to parameters already defined in the route path.
  Any changes made to the req.params object in a middleware or route handler will be reset.